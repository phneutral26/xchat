#BlueJ class context
comment0.target=xserver
comment1.params=
comment1.target=xserver()
comment1.text=\r\n\ Initializes\ a\ new\ instance\ of\ the\ xserver\ class.\r\n\ <p>\r\n\ This\ constructor\ initializes\ the\ xserver\ class\ by\ calling\ the\ constructor\ of\ its\ superclass\ with\ the\ provided\ port\ number.\r\n\ It\ also\ initializes\ a\ chatroom\ named\ "general"\ with\ the\ given\ user\ list\ and\ sets\ it\ as\ the\ general\ chatroom.\r\n\r\n
comment10.params=pIP\ pPort
comment10.target=void\ processNewConnection(java.lang.String,\ int)
comment11.params=pClientIP\ pClientPort\ pMessage
comment11.target=void\ processMessage(java.lang.String,\ int,\ java.lang.String)
comment11.text=\r\n\ Processes\ a\ message\ received\ from\ the\ client.\r\n\ <p>\r\n\ This\ method\ processes\ the\ message\ received\ from\ the\ client\ and\ performs\ the\ corresponding\ action.\r\n\ If\ the\ message\ starts\ with\ "LOGIN\:",\ it\ extracts\ the\ username\ and\ calls\ the\ login()\ method.\r\n\ If\ the\ message\ starts\ with\ "LOGOUT\:",\ it\ extracts\ the\ username\ and\ calls\ the\ logout()\ method.\r\n\ If\ the\ message\ starts\ with\ "BROADCAST\:",\ it\ splits\ the\ message\ into\ three\ parts\ and\ creates\ a\ new\ message\ object,\r\n\ then\ calls\ the\ broadcastMessage()\ method.\r\n\ If\ the\ message\ starts\ with\ "PRIVATE\:",\ it\ splits\ the\ message\ into\ four\ parts,\ creates\ a\ new\ message\ object,\r\n\ and\ calls\ the\ privateMessage()\ method.\r\n\ If\ the\ message\ starts\ with\ "USERLIST\:",\ it\ extracts\ the\ username\ and\ calls\ the\ userlist()\ method.\r\n\ If\ the\ message\ starts\ with\ "BLOCK\:",\ it\ splits\ the\ message\ into\ three\ parts\ and\ calls\ the\ blockUser()\ method.\r\n\ If\ the\ message\ doesn't\ match\ any\ of\ the\ above\ formats,\ it\ sends\ an\ "Invalid\ request"\ message\ back\ to\ the\ client.\r\n\r\n\ @param\ pClientIP\ \ \ The\ IP\ address\ of\ the\ client.\r\n\ @param\ pClientPort\ The\ port\ number\ of\ the\ client.\r\n\ @param\ pMessage\ \ \ \ The\ message\ received\ from\ the\ client.\r\n
comment2.params=pIP\ pPort\ pUsername
comment2.target=void\ login(java.lang.String,\ int,\ java.lang.String)
comment2.text=\r\n\ Logs\ in\ a\ user\ with\ the\ provided\ IP\ address,\ port\ number,\ and\ username.\r\n\r\n\ @param\ pIP\ \ \ \ \ \ \ The\ IP\ address\ of\ the\ user.\r\n\ @param\ pPort\ \ \ \ \ The\ port\ number\ of\ the\ user.\r\n\ @param\ pUsername\ The\ username\ of\ the\ user.\r\n
comment3.params=pClientIP\ pClientPort\ pUsername
comment3.target=void\ logout(java.lang.String,\ int,\ java.lang.String)
comment3.text=\r\n\ Logout\ method\ for\ the\ xserver\ class.\r\n\ <p>\r\n\ This\ method\ is\ used\ to\ log\ out\ a\ user\ from\ the\ server.\ It\ removes\ the\ user\ from\ the\ list\ of\ logged-in\ users\ and\ sends\ a\ success\ or\ failure\ message\ back\ to\ the\ client.\r\n\r\n\ @param\ pClientIP\ The\ IP\ address\ of\ the\ client.\r\n\ @param\ pClientPort\ The\ port\ number\ of\ the\ client.\r\n\ @param\ pUsername\ The\ username\ of\ the\ user\ who\ wants\ to\ log\ out.\r\n
comment4.params=pMessage
comment4.target=void\ broadcastMessage(message)
comment4.text=\r\n\ Broadcasts\ a\ message\ to\ all\ users\ in\ the\ chatrooms\ who\ are\ not\ blocked\ by\ the\ sender.\r\n\r\n\ @param\ pMessage\ The\ message\ to\ be\ broadcasted.\r\n
comment5.params=pAdressat\ pMessage
comment5.target=void\ privateMessage(java.lang.String,\ message)
comment5.text=\r\n\ Sends\ a\ private\ message\ to\ a\ specific\ user.\r\n\ <p>\r\n\ This\ method\ checks\ if\ the\ sender\ or\ the\ recipient\ is\ blocked\ by\ the\ other\ user\ and\ sends\ an\ appropriate\ failure\ message.\r\n\ If\ a\ chat\ room\ already\ exists\ between\ the\ sender\ and\ recipient,\ the\ message\ is\ sent\ to\ the\ chat\ room.\r\n\ Otherwise,\ a\ new\ chat\ room\ is\ created\ with\ the\ sender\ and\ recipient,\ and\ the\ message\ is\ sent.\r\n\r\n@param\ pAdressat\ The\ recipient\ of\ the\ private\ message
comment6.params=pUsername
comment6.target=void\ userlist(java.lang.String)
comment6.text=\r\n\ Sends\ an\ userlist\ to\ a\ specific\ user.\r\n\r\n\ @param\ pUsername\ The\ username\ of\ the\ user\ to\ whom\ the\ userlist\ will\ be\ sent.\r\n
comment7.params=pUsername\ toBlock
comment7.target=void\ blockUser(java.lang.String,\ java.lang.String)
comment7.text=\r\n\ Blocks\ a\ user\ from\ sending\ messages\ to\ another\ user.\r\n\ <p>\r\n\ This\ method\ checks\ if\ the\ user\ to\ be\ blocked\ is\ the\ same\ as\ the\ requesting\ user.\ If\ they\ are\ the\ same,\r\n\ a\ BLOCK_FAILURE_SELFBLOCK\ message\ is\ sent\ and\ printed.\ If\ they\ are\ different,\ the\ user\ to\ be\ blocked\ is\ added\r\n\ to\ the\ blocked\ list\ of\ the\ requesting\ user,\ and\ a\ BLOCK_SUCCESS\ message\ is\ sent\ and\ printed.\ If\ the\ user\ to\ be\r\n\ blocked\ is\ already\ in\ the\ blocked\ list\ of\ the\ requesting\ user,\ a\ BLOCK_FAILURE\ message\ is\ sent\ and\ printed.\r\n\r\n\ @param\ pUsername\ The\ username\ of\ the\ requesting\ user.\r\n\ @param\ toBlock\ \ \ The\ username\ of\ the\ user\ to\ be\ blocked.\r\n
comment8.params=pUsername\ pToBeChecked
comment8.target=boolean\ isBlocked(java.lang.String,\ java.lang.String)
comment8.text=\r\n\ Checks\ if\ a\ user\ is\ blocked\ by\ another\ user.\r\n\r\n\ @param\ pUsername\ \ \ \ The\ username\ of\ the\ user\ who\ wants\ to\ check\ if\ they\ are\ blocked.\r\n\ @param\ pToBeChecked\ The\ username\ of\ the\ user\ to\ be\ checked\ if\ they\ are\ blocked.\r\n\ @return\ true\ if\ the\ user\ is\ blocked,\ false\ otherwise.\r\n
comment9.params=pIP\ pPort
comment9.target=void\ processClosingConnection(java.lang.String,\ int)
comment9.text=\r\n\ Removes\ the\ user\ with\ the\ given\ IP\ address\ and\ port\ number\ from\ the\ list\ of\ logged-in\ users,\ as\ well\ as\ their\ associated\ IP\ address\ in\ the\ usersToIP\ map.\r\n\ If\ the\ IP\ address\ and\ port\ number\ match\ with\ a\ user\ in\ the\ list,\ that\ user\ will\ be\ removed.\r\n\r\n\ @param\ pIP\ \ \ The\ IP\ address\ of\ the\ user\ to\ be\ removed.\r\n\ @param\ pPort\ The\ port\ number\ of\ the\ user\ to\ be\ removed.\r\n
numComments=12
